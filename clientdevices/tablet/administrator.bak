{"device":"TABLET","widgets":{"Scripting#1":{"t":"Scripting","lX":975,"lY":30,"sX":1,"sY":1,"s":"New Screen 0","ps":{"enabled":"false","scalingType":"OK","width":"9.08%","height":"8.32%","x":"88.47%","y":"2.66%"},"ver":"200124c210519","dis":false,"tt":"","a":{"code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar devices;\nvar activeData;\nScript.on('load', function() {\n\tactiveData = {};\n\tdevices = {};\n\t devices[\"123\"] = {\n\t\t\"Id\": 123,\n\t\t\"Sid\": 123,\n\t\t\"RedAlertEnabled\": 1,\n\t\t\"AmberAlertEnabled\": 1,\n\n\n\t};\n\tactiveData[\"123\"] = {};\n\tactiveData[\"123\"].RedCanSend = 1;\n\tactiveData[\"123\"].AmberCanSend = 1;\n\t//activeData[selected[1]].data = [];\n\tactiveData[\"123\"].dataRed = [];\n\tactiveData[\"123\"].dataAmber = [];\n\tUnitTests();\n});\n\nfunction UnitTests()\n{\n\t//var alertType = \"RedAlertExpired\";\n\tvar alertType = \"AmberAlertExpired\";\n\tvar result = [];\n    for(var currentDevice in devices)\n\t{\n\t\tvar selected = devices[currentDevice];\n\t\t\n\t\t activeData[\"123\"].dataRed = [4,4,4,3,3,3,3,3,4,4,4];\n\t\t activeData[\"123\"].dataAmber = [3,3,3,4,4,2,4,4,4,3,3];\n\n\t    if(activeData[parseInt(selected.Sid)].dataRed.length > 0 || activeData[parseInt(selected.Sid)].dataAmber.length > 0)\n        {        \n            var validateAlert;\n            var validateReset ;\n            if(alertType === \"RedAlertExpired\")\n            {\n                validateAlert = ValidateAlert(activeData[parseInt(selected.Sid)].dataRed, alertType);\n                validateReset = ValidateAlertReset(activeData[parseInt(selected.Sid)].dataRed);\n            }\n            else\n            {\n                validateAlert = ValidateAlert(activeData[parseInt(selected.Sid)].dataAmber, alertType);\n                validateReset = ValidateAlertReset(activeData[parseInt(selected.Sid)].dataAmber);\n            }\n\t\n        \n            if(validateAlert.alertReult)\n\t\t\t{\n\t\t\t\t \n\t\t\t\tif(alertType === \"RedAlertExpired\" && activeData[parseInt(selected.Sid)].RedCanSend === 1 && validateAlert.AlertType === 3)\n\t\t\t\t{\n                    activeData[parseInt(selected.Sid)].RedCanSend = 0;\n\t\t\t\t//\tresult.push(SendNotification(activeData[parseInt(selected.Sid)], 1));\n\t\t\t\t\tactiveData[parseInt(selected.Sid)].dataRed = [];\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(alertType === \"AmberAlertExpired\" && activeData[parseInt(selected.Sid)].AmberCanSend === 1 && validateAlert.AlertType === 4)\n\t\t\t\t{\n                    activeData[parseInt(selected.Sid)].AmberCanSend = 0;\n \n\t\t\t\t//\tresult.push(SendNotification(activeData[parseInt(selected.Sid)], 2));\n\t\t\t\t\tactiveData[parseInt(selected.Sid)].dataAmber = [];\n\n\t\t\t\t}\n\t\t\t}\n            else{\n                if(alertType === \"RedAlertExpired\" && activeData[parseInt(selected.Sid)].RedCanSend === 1 && validateAlert.AlertType === 3)\n\t\t\t\t{\n                    \n\t\t\t\t\tactiveData[parseInt(selected.Sid)].dataRed = [];\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(alertType === \"AmberAlertExpired\" && activeData[parseInt(selected.Sid)].AmberCanSend === 1 && validateAlert.AlertType === 4)\n\t\t\t\t{\n \t\t\t\t\tactiveData[parseInt(selected.Sid)].dataAmber = [];\n\n\t\t\t\t}\n            }\n\t\t\t\n\t\t\tif(validateReset)\n\t\t\t{\n\t\t\t\tconsole.log(\"Resetting thresholds senders\");\n \t\t\t\tactiveData[parseInt(selected.Sid)].RedCanSend = 1;\n\t\t\t\tactiveData[parseInt(selected.Sid)].AmberCanSend = 1;\n                activeData[parseInt(selected.Sid)].dataRed = [];\n                activeData[parseInt(selected.Sid)].dataAmber = [];\n\t\t\t}\n\n        }\n\t}\n    return result;\n}\n\n\nfunction ValidateAlert(data, alertType)\n{\n\tvar result ={};\n    var sendSignal = true;\n\tvar alert;\n\tswitch(alertType)\n\t{\n\t\tcase \"RedAlertExpired\":\n\t\t\talert = 3;\n\t\t\tbreak;\n\t\tcase \"AmberAlertExpired\":\n\t\t\talert = 4;\n\t\t\tbreak;\n\t}\n\t\n\tfor(var item in data)\n\t{\n\t//\tconsole.log(data[item]);\n\t\tif(data[item] === 2 )\n\t\t{\n\t\t   sendSignal = false;\n\t\t}\n\t}\n\tresult.AlertType = alert;\n    result.alertReult = sendSignal;\n\treturn result;\n}\n\n\n\nfunction ValidateAlertReset(data)\n{\n\tvar result = false;\n\tfor(var item in data)\n\t{\n\t//\tconsole.log(data[item]);\n\t\tif(data[item] === 2)\n\t\t{\n\t\t   result = true;\n\t\t}\n\t}\n\n\treturn result;\n}","script type":"javascript"},"ev":{}},"Graph#0":{"t":"Graph","lX":55,"lY":215,"sX":4.95,"sY":2.95,"s":"New Screen 0","ps":{"enabled":"false","scalingType":"OK","width":"89.92%","height":"48.68%","x":"5%","y":"17.89%"},"ver":"190104c210519","dis":false,"tt":"","a":{"line type":"linear","history timespan":"500","enable zoom":"true"},"ev":{"serverEvents":{"inputEvents":{"New Event #2":{"channel":"PESTCO/RODENTS/999011/WEIGHT","event":"history","important":"false","attribs":{"color":"red","area fill":"false","fill opacity":"0.2"}},"New Event #3":{"channel":"PESTCO/RODENTS/999011/MOTIONRIGHT","event":"history","important":"false","attribs":{"color":"blue","area fill":"false","fill opacity":"0.2"}},"New Event #4":{"channel":"PESTCO/RODENTS/999011/PACKETTYPE","event":"history","important":"false","attribs":{"color":"yellow","area fill":"false","fill opacity":"0.2"}},"New Event #1":{"channel":"PESTCO/RODENTS/999011/MOTIONLEFT","event":"history","important":"false","attribs":{"color":"green","area fill":"false","fill opacity":"0.2"}}}}}},"testBranchesTable":{"t":"Table","lX":35,"lY":40,"sX":6.45,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"27.07%","height":"51.49%","x":"1.55%","y":"3.3%"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,name,status","display header":"true","title":"Branches","colWidths":"0.3328149300155521,0.3343701399688958,0.3328149300155521","enable search":"true"},"ev":{}},"testCustomersTable":{"t":"Table","lX":35,"lY":505,"sX":6.5,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"27.28%","height":"51.49%","x":"3.99%","y":"8.66%"},"ver":"190104c210519","dis":false,"tt":"","a":{"columns":"id,name,relativeid,status","text color":"#000000","row color":"#000000","colWidths":"0.25462962962962965,0.24537037037037038,0.25462962962962965,0.24537037037037038","display header":"true","title":"Customers","enable search":"true"},"ev":{}},"Scripting#0":{"t":"Scripting","lX":2135,"lY":200,"sX":1,"sY":1,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"","height":"","x":"","y":""},"ver":"200124c210519","dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\nconst testCustomersTable = Script.getWidget(\"testCustomersTable\");\nconst testBranchesTable = Script.getWidget(\"testBranchesTable\");\nconst testSitesTable = Script.getWidget(\"testSitesTable\");\nconst testLocationsTable = Script.getWidget(\"testLocationsTable\");\nconst  testPlatformTable = Script.getWidget(\"testPlatformTable\");\nconst testModelTable = Script.getWidget(\"testModelTable\");\nconst Advisories = Script.getWidget(\"Advisories\");\nconst Devices = Script.getWidget(\"Devices\");\nconst ErrorTransactions = Script.getWidget(\"ErrorTransactions\");\nconst CompanyTable = Script.getWidget(\"companyTable\");\n\nClientEvents.subscribe(\"resetErrorTransactions\", function (eventData) {\n\t// set all the error transactions to active \n\tDatabase.readRecords(\"rodent\", \"ErrorTransactions\", function (eventData) {\n\t\tlet data = SensaCollection.load(eventData.value);\n\t\tdata.forEach((record, pk) => {\n\t\t\trecord['IsActive'] = 1;\n\t\t\tlet dbVal = {};\n\t\t\tdbVal[pk] = record;\n\t\t\tDatabase.saveRecordParam(\"rodent\", \"ErrorTransactions\", dbVal);\n\t\t});\n\t});\n\t// go through all the devices, check if the error code flag has been set, then check if any error transactions exist. If they don't then need to update\n\t// the error code flag to 0\n\tDatabase.readRecords(\"rodent\", \"Devices\", function (eventData) {\n\t\tconsole.log(\"Reading devices\");\n\t\tvar data = SensaCollection.load(eventData.value);\n\t\tdata.forEach((record1, pk1) => {\n\t\t\tconsole.log(\"Checking device: \" + pk1);\n\t\t\t\n\t\t\t// check each device, if the error code flag is set then check if there are actually any error transactions\n\t\t\t// if (record1['ErrorCodeFlag'] == 1) {\n\t\t\t\t//console.log(\"Error code flag was set for device: \" + pk1);\n\t\t\t\t\n\t\t\t// check error transaction database\n\t\t\tDatabase.readRecords(\"rodent\", \"ErrorTransactions\", function (readData) {\n\t\t\t\tconsole.log(\"Reading error transactions\");\n\t\t\t\treadData = SensaCollection.load(readData.value);\n\t\t\t\tvar transactionCounter = 0;\n\t\t\t\treadData.forEach((record2, pk2) => {\n\t\t\t\t\ttransactionCounter++;\n\t\t\t\t});\n\t\t\t\tif (transactionCounter == 0) {\n\t\t\t\t\t// if there are no transactions, need to set the error code flag to 0\n\t\t\t\t\tconsole.log(\"No error transactions for device: \" + pk1);\n\t\t\t\t\trecord1['ErrorCodeFlag'] = 0;\n\t\t\t\t\tvar tempRecord = {'Id':pk1, 'ErrorCodeFlag': 0};\n\t\t\t\t\tvar dbVal = {};\n\t\t\t\t\tdbVal[pk1] = tempRecord;\n\t\t\t\t\tDatabase.saveRecordParam(\"rodent\", \"Devices\", dbVal);\n\t\t\t\t\tconsole.log(\"Error code flag cleared for device: \" + pk1);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Found error transactions for device: \" + pk1);\n\t\t\t\t\trecord1['ErrorCodeFlag'] = 1;\n\t\t\t\t\tvar tempRecord = {'Id':pk1, 'ErrorCodeFlag': 0};\n\t\t\t\t\tvar dbVal = {};\n\t\t\t\t\tdbVal[pk1] = tempRecord;\n\t\t\t\t\tDatabase.saveRecordParam(\"rodent\", \"Devices\", dbVal);\n\t\t\t\t\tconsole.log(\"Error code flag set for device: \" + pk1);\n\t\t\t\t}\n\t\t\t}, {\"columns\": \"Id,DeviceId\", \"filter\": \"DeviceId = \" + pk1}\n\t\t );\n\t\t\t//}\n\t\t});\n\t});\n});\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on('load', function() {\n\tDatabase.readRecords(\"rodent\", \"Customers\", function (eventData) {\n\t\ttestCustomersTable.receiveValue(SensaCollection.load(eventData.value));\n\t});\n\tDatabase.readRecords(\"rodent\", \"Branches\", function (eventData) {\n\t\ttestBranchesTable.receiveValue(SensaCollection.load(eventData.value));\n\t});\n\tDatabase.readRecords(\"rodent\", \"Sites\", function (eventData) {\n\t\ttestSitesTable.receiveValue(SensaCollection.load(eventData.value));\n\t});\n\tDatabase.readRecords(\"rodent\", \"Locations\", function (eventData) {\n\t\ttestLocationsTable.receiveValue(SensaCollection.load(eventData.value));\n\t});\n\tDatabase.readRecords(\"rodent\", \"SiteEvents\", function (eventData) {\n\t\tAdvisories.receiveValue(SensaCollection.load(eventData.value));\n\t});\t\n\t\n\tDatabase.readRecords(\"rodent\", \"UserRoles\", function (eventData) {\n\t\ttestPlatformTable.receiveValue(SensaCollection.load(eventData.value));\n\t});\n\t\n\tDatabase.readRecords(\"rodent\", \"Model\", function (eventData) {\n\t\ttestModelTable.receiveValue(SensaCollection.load(eventData.value));\n\t});\t\n\t\n\tDatabase.readRecords(\"rodent\", \"Devices\", function (eventData) {\n\t\tvar sensaData = SensaCollection.load(eventData.value);\n\t\t//sensaData.renameColumn(\"P1Weight\", \"P1 LC\");\n\t\tDevices.receiveValue(sensaData);\n\t});\n\t\n\tDatabase.readRecords(\"rodent\", \"ErrorTransactions\", function (eventData) {\n\t\tErrorTransactions.receiveValue(SensaCollection.load(eventData.value));\n\t});\n\tDatabase.readRecords(\"rodent\", \"Companies\", function (eventData) {\n\t\tCompanyTable.receiveValue(SensaCollection.load(eventData.value));\n\t});\n\t\n\tClientEvents.subscribe(\"clearErrorCodeFlags\", clearErrorCodeFlagsPressed);\n});\n\nfunction clearErrorCodeFlagsPressed() {\n\t// get the selected device id's from the table\n\tvar deviceTableForm = Script.getFormByKey(\"devices\");\n\tvar selectedRowsCollection = deviceTableForm.selectedRows;\n\tvar selectedRowsData = selectedRowsCollection.data;\n\t\n\t// for each device, set the error code flag to zero and update the database\n\tvar dbVal = {};\n\tvar deviceIds = Object.keys(selectedRowsData);\n\tfor (var i = 0; i < deviceIds.length; i++) {\n\t\tvar deviceId = deviceIds[i];\n\t\t// create the record to save\n\t\tvar tempRecord = {\n\t\t\t\"Id\": deviceId,\n\t\t\t\"ErrorCodeFlag\": 0\n\t\t};\n\t\tdbVal[deviceId] = tempRecord;\n\t\tDatabase.saveRecord(\"rodent\", \"Devices\", dbVal, function(eventData){\n\t\t\tconsole.log(\"Device id \" + deviceId + \" updated\");\n\t\t});\n\t}\n\tDevices.deleteAllRows();\n\tDatabase.readRecords(\"rodent\", \"Devices\", function (eventData) {\n\t\tDevices.receiveValue(SensaCollection.load(eventData.value));\n\t});\n}"},"ev":{}},"testSitesTable":{"t":"Table","lX":695,"lY":40,"sX":6.45,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"27.07%","height":"51.49%","x":"4.2%","y":"51.16%"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,name,relativeid,status,stationid","display header":"true","title":"Sites","enable search":"true","colWidths":"0.2006220839813375,0.19906687402799378,0.2006220839813375,0.19906687402799378,0.2006220839813375"},"ev":{}},"testLocationsTable":{"t":"Table","lX":695,"lY":505,"sX":6.45,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"27.07%","height":"51.49%","x":"29.21%","y":"41.75%"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,name,relativeid,status","display header":"true","title":"Locations","colWidths":"0.25038880248833595,0.25038880248833595,0.24883359253499224,0.25038880248833595","enable search":"true"},"ev":{}},"Advisories":{"t":"Table","lX":35,"lY":975,"sX":34.45,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"197.65%","height":"51.49%","x":"2.12%","y":"111.44%"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,title,siteeventpriority,siteeventtype,siteid,trapid,reportid,reason,location,assigned,context,comment,locationid,customerid,companyid,siteeventstatus,images,siteeventdate,branchid,createdon,createdby,updatedby,updatedon,status","display header":"true","title":"Advisories","enable search":"true","colWidths":""},"ev":{}},"testPlatformTable":{"t":"Table","lX":1355,"lY":505,"sX":6.45,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"27.07%","height":"51.49%","x":"29.21%","y":"41.75%"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,user,isadmin","display header":"true","title":"UserRoles","colWidths":"0.3328149300155521,0.3343701399688958,0.3328149300155521","enable search":"true"},"ev":{}},"Devices":{"t":"Table","lX":30,"lY":1435,"sX":34.45,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"144.57%","height":"51.37%","x":"1.26%","y":"118.4%"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,updatetime,devicenumber,locationid,siteid,updatedon,status,stationid,modelid,p1weight,p2weight,devicerange,rebaitrange,errorcodeflag,communicationerror,alert","display header":"true","title":"Devices","enable search":"true","form id":"devices","form key":"selectedRows","selectable":"multi","colWidths":""},"ev":{}},"testModelTable":{"t":"Table","lX":1355,"lY":40,"sX":6.45,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"27.07%","height":"51.49%","x":"29.21%","y":"41.75%"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,name,modeltype,batteryupper,batterylower","display header":"true","title":"Model","colWidths":"0.2006220839813375,0.19906687402799378,0.2006220839813375,0.19906687402799378,0.2006220839813375","enable search":"true"},"ev":{}},"ErrorTransactions":{"t":"Table","lX":30,"lY":1895,"sX":34.45,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"312.9%","height":"51.49%","x":"2.72%","y":"157.65%"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,deviceid,issueid,isactive,transactionvalue","display header":"true","title":"ErrorTransactions","colWidths":"0.2001161777519605,0.19982573337205925,0.2001161777519605,0.19982573337205925,0.2001161777519605","enable search":"true"},"ev":{}},"Button#0":{"t":"Button","lX":205,"lY":1905,"sX":2.05,"sY":1,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"18.62%","height":"5.26%","x":"24.7%","y":"158.6%"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Reset Transactions"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"resetErrorTransactions/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"companyTable":{"t":"Table","lX":2020,"lY":505,"sX":6.45,"sY":4.5,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"27.07%","height":"51.49%","x":"29.21%","y":"41.75%"},"ver":"190104c210519","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"id,name,address,status","display header":"true","title":"Companies","enable search":"true","colWidths":"0.25038880248833595,0.25038880248833595,0.24883359253499224,0.25038880248833595"},"ev":{}},"Button#1":{"t":"Button","lX":140,"lY":1440,"sX":2.05,"sY":1,"s":"New Screen 1","ps":{"enabled":false,"scalingType":"OK","width":"18.62%","height":"5.26%","x":"24.7%","y":"158.6%"},"ver":"190104c210519","dis":false,"tt":"","a":{"button name":"Clear Error Code Flag"},"ev":{"clientEvents":{"outputEvents":{"clearErrorCodeFlag":{"channel":"clearErrorCodeFlags/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}}},"screens":{"New Screen 0":{"index":0,"icon":"widgets","meta":""},"New Screen 1":{"index":1,"icon":"widgets","meta":""}},"meta":""}