{"device":"DESKTOP","widgets":{"Maps#0":{"t":"Maps","lX":40,"lY":150,"sX":2.04,"sY":1.32,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"OK","width":"109.64%","height":"69.99%","x":"0%","y":"0%"},"ver":"190104c190915","dis":false,"tt":"","a":{},"ev":{"clientEvents":{"inputEvents":{"map pins":{"channel":"map pins/add custom popup","event":"add custom popup","important":"false"},"Finish Line":{"channel":"draw-finish-line/draw line","event":"draw line","important":"false"},"Remove Line":{"channel":"remove-line/remove line","event":"remove line","important":"false"}}}}},"Label#0":{"t":"Label","lX":65,"lY":50,"sX":9.05,"sY":2.6,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"OK","width":"48.53%","height":"6.86%","x":"3.38%","y":"6.02%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<font size=\"7\" color=\"#555555\">Yacht Tracking and Timing</font>"},"ev":{}},"Clock#0":{"t":"Clock","lX":1105,"lY":125,"sX":1.75,"sY":1.75,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"NOHORIZ,NOVERT","width":"9.33%","height":"7.39%","x":"59.52%","y":"19.96%"},"ver":"190104c190915","dis":false,"tt":"","a":{"timezone GMT":"-12","color":"blue"},"ev":{}},"Container#11":{"t":"Container","lX":0,"lY":15,"sX":13.65,"sY":8.05,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"OK","width":"73.19%","height":"85.11%","x":"1.23%","y":"2.64%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"","color":"grey"},"ev":{}},"Container#12":{"t":"Container","lX":15,"lY":25,"sX":11.3,"sY":15.25,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"60.59%","height":"145.1%","x":"0.75%","y":"2.64%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"","color":"grey"},"ev":{}},"Label#1":{"t":"Label","lX":55,"lY":45,"sX":3.85,"sY":2.92,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"20.64%","height":"7.81%","x":"2.95%","y":"4.75%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<font size=\"7\" color=\"#555555\">Register Devices</font>"},"ev":{}},"Text Area#0":{"t":"Text Area","lX":715,"lY":115,"sX":4.15,"sY":5.05,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"22.25%","height":"75.49%","x":"38.5%","y":"12.2%"},"ver":"190104c190915","dis":false,"tt":"","a":{"placeholder":"","label text":"MQTT Feed"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DEVICE/DISPLAY","event":"feed","important":"false"}}}}},"Icon#1":{"t":"Icon","lX":625,"lY":555,"sX":1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.68%","height":"7.3%","x":"13.67%","y":"54.38%"},"ver":"200628c190915","dis":false,"tt":"","a":{"icon file":"trash","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"delete device":{"channel":"delete-device/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Container#13":{"t":"Container","lX":40,"lY":130,"sX":2.95,"sY":4.9,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"15.82%","height":"46.62%","x":"2.25%","y":"13.73%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Yacht Registration","color":"grey","3D shadow":"true"},"ev":{}},"Container#14":{"t":"Container","lX":360,"lY":130,"sX":3.4,"sY":4.95,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"18.23%","height":"86.69%","x":"19.25%","y":"13.62%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Registered Devices","color":"grey","3D shadow":"true"},"ev":{}},"Container#15":{"t":"Container","lX":40,"lY":640,"sX":2.95,"sY":1.31,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"15.82%","height":"13.89%","x":"2.04%","y":"67.48%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Finish Marker Registration","color":"grey","3D shadow":"true"},"ev":{}},"Icon#2":{"t":"Icon","lX":245,"lY":695,"sX":1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.68%","height":"5.3%","x":"13.67%","y":"54.38%"},"ver":"200628c190915","z":"110","dis":false,"tt":"","a":{"icon file":"check-square","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"marker-save":{"channel":"marker-save/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Container#16":{"t":"Container","lX":870,"lY":640,"sX":2.5,"sY":1.31,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"13.4%","height":"13.89%","x":"46.6%","y":"67.87%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Set Start Time","color":"grey","3D shadow":"true"},"ev":{}},"Indicator#0":{"t":"Indicator","lX":1250,"lY":135,"sX":1.25,"sY":1.25,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"NOHORIZ,NOVERT","width":"6.7%","height":"13.31%","x":"66.7%","y":"14.47%"},"ver":"200124c190915","dis":false,"tt":"","a":{"indicator type":"traffic light","threshold type":"above","blink threshold":"90","red threshold":"90","yellow threshold":"80","green threshold":"0"},"ev":{}},"Input#13":{"t":"Input","lX":1115,"lY":200,"sX":1.5,"sY":1,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"NOVERT","width":"8.04%","height":"5.6%","x":"59.79%","y":"20.91%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Start of Race"},"ev":{}},"Label#2":{"t":"Label","lX":1350,"lY":705,"sX":3.6,"sY":3.6,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"19.3%","height":"10.11%","x":"38.93%","y":"72.25%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"Sebastian, we also need to add the details about the finish line bouys."},"ev":{}},"Table#2":{"t":"Table","lX":35,"lY":835,"sX":17.88,"sY":3.05,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"94.91%","height":"29.02%","x":"3.22%","y":"94.27%"},"ver":"190104c190915","z":"130","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"tracker_id,user_id,first_name,last_name,division_id,division,sail_number,boat_name,email,phone_no,boat_id,device_type,manual_latitude,manual_longitude,start_time,finish_time,last_seen","title":"","colWidths":"0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705,0.058823529411764705"},"ev":{"clientEvents":{"inputEvents":{"New Event #1":{"channel":"clear-detailed-table/delete rows","event":"delete rows","important":"false"},"New Event #2":{"channel":"detailed-table-receive/receive value","event":"receive value","important":"false"}}}}},"Container#17":{"t":"Container","lX":20,"lY":790,"sX":18.45,"sY":4.95,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"98.93%","height":"52.49%","x":"0.59%","y":"83.46%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Registered Devices Detailed Information","color":"grey","3D shadow":"true"},"ev":{}},"Label#3":{"t":"Label","lX":1245,"lY":180,"sX":3.1,"sY":1.32,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"16.62%","height":"3.71%","x":"67.02%","y":"20.22%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"Latitude: [#]"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/LATITUDE","event":"feed","important":"false"}}}}},"Label#4":{"t":"Label","lX":1245,"lY":215,"sX":2.65,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"14.26%","height":"2.81%","x":"66.76%","y":"24.16%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"Longitude: [#]"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/LONGITUDE","event":"feed","important":"false"}}}}},"Label#5":{"t":"Label","lX":1245,"lY":255,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"5.9%","height":"2.81%","x":"67.02%","y":"28.09%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"Northing: [#]"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/NORTHING","event":"feed","important":"false"}}}}},"Label#6":{"t":"Label","lX":1245,"lY":290,"sX":1.2,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"6.43%","height":"2.64%","x":"66.7%","y":"30.62%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"Easting: [#]"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/EASTING","event":"feed","important":"false"}}}}},"Distance Calculations":{"t":"Scripting","lX":1160,"lY":405,"sX":1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on('load', function() {\n\tconsole.log(\"test pdistance function\");\n\t\n\tvar dist1, dist2, dist3;\n\t//dist1 = pDistance(1,0,0,1,0,-1);\n\t//dist2 = pDistance(1,1,0,1,0,-1);\n\t//dist3 = pDistance(1,2,0,1,0,-1);\n\t//console.log(dist1);\n\t//console.log(dist2);\n\t//console.log(dist3);\n\tdist2 = pDistance(1,1,0,1,0,-1);\n\tconsole.log(dist2);\n\tdist3 = pDistance(1,2,0,1,0,-1);\n\tconsole.log(dist3);\n\tdist1 = pDistance(-27.52473,152.97008,-27.52473,152.97002,-27.52469,152.97006);\n\tconsole.log(dist1);\n\t\n});\n\nfunction pDistance(x, y, x1, y1, x2, y2) {\n\n  var A = x - x1;\n  var B = y - y1;\n  var C = x2 - x1;\n  var D = y2 - y1;\n\n  var dot = A * C + B * D;\n  var len_sq = C * C + D * D;\n  var param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  var xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\t// can now convert to the distance using the ellipse earth model\n  var M_PI = Math.PI;\n  var radius = 6372800;\n  var calibrated_lat = x;\n  var operation_lat = xx;\n  var calibrated_long = y;\n  var operation_long = yy;\n  var phi1 = calibrated_lat * M_PI / 180.0;\n  var phi2 = operation_lat * M_PI / 180.0;\n  var dphi = (operation_lat - calibrated_lat) * M_PI / 180.0;\n  var dlambda = (operation_long - calibrated_long) * M_PI / 180.0;\n  var a = Math.pow(Math.sin(dphi / 2),2) + Math.cos(phi1)*Math.cos(phi2)*Math.pow(Math.sin(dlambda/2),2);\n  var distance = 2 * radius * Math.atan2(Math.sqrt(a),Math.sqrt(1-a));\n  return distance;\n  //var dx = x - xx;\n  //var dy = y - yy;\n  //return Math.sqrt(dx * dx + dy * dy);\n}"},"ev":{}},"popupTemplateDesktop":{"t":"Scripting","lX":1395,"lY":210,"sX":1,"sY":1,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"NOSCALE","width":"5.36%","height":"11.12%","x":"73.99%","y":"63.18%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"html","code editor":"<div>\n<style>\n\t\n\t.redBoat {\n\t\tbackground-image: url(\"/userfiles/yacht/sailing-boat-red.svg\");\n\t\tbackground-size: contain;\n\t\tbackground-color: white;\n\t\tborder-radius: 5px;\n  }\n\t\n\t.greenBoat {\n\t\tbackground-image: url(\"/userfiles/yacht/sailing-boat-green.svg\");\n\t\tbackground-size: contain;\n\t\tbackground-color: white;\n\t\tborder-radius: 5px;\n\t}\n\t\n\t.greyBoat {\n\t\tbackground-image: url(\"/userfiles/yacht/sailing-boat-grey.svg\");\n\t\tbackground-size: contain;\n\t\tbackground-color: white;\n\t\tborder-radius: 5px;\n\t}\n\t\n\t.finishMarker {\n\t\tbackground-image: url(\"/userfiles/yacht/checkered-flag-black.svg\");\n\t\tbackground-size: contain;\n\t\tbackground-color: white;\n\t\tborder-radius: 5px;\n\t}\n\t\t\n   /* Triggered */\n  .redIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Red.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n  }\n      \n  /* Inactive */\n  .greyIcon {\n    background-image: url(\"/userfiles/Animal-Trap-Icon-DkGrey.svg\");\n    background-size: contain;\n    background-color: white;\n    border-radius: 5px;\n   }\n        \n   /* Set  */\n   .greenIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Green_2.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n   }\n    \n    .pinSelected {\n       background-color: black;   \n    }\n    \n    .main {\n      background-color: rgba(128, 128, 128, 0.7);\n      color: white;\n      border: 2px solid black;\n      border-radius: 4px;\n      padding: 4px;\n      overflow: hidden;\n      min-width: 140px;\n    }\n\n    .title {\n      font-size: large;\n    }\n\n    .name {\n      float: right;\n    }\n    \n    .container {\n      height: 30px;\n      position: relative; \n    }\n        \n    .vertical-center {\n      margin: 0;\n      position: absolute;\n      top: 50%;\n      -ms-transform: translateY(-50%);\n      transform: translateY(-50%);\n    }\n\n</style>\n<div class=\"main pinSelected\"  onclick=\"fw.fireEvent('custom popup pressed', this.querySelector('[data-value=\\'id\\']').innerHTML);\">\n  <div class=\"container\">\n\t<div data-value=\"id\" style=\"display: none;\">--</div>\n    <div data-value=\"icon\" class=\"redIcon\" style=\"display: inline-block; width: 25px; height: 25px; margin-right: 4px;\"></div>\n    <div data-value=\"title\" class=\"title vertical-center\" style=\"display: inline-block; left: 30px;\">\n      --\n    </div>\n  </div>\n</div>\n</div>"},"ev":{}},"Label#7":{"t":"Label","lX":1245,"lY":150,"sX":1.2,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"6.91%","height":"2.86%","x":"71.39%","y":"33.52%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"ID: [#]"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/ID","event":"feed","important":"false"}}}}},"Label#8":{"t":"Label","lX":1250,"lY":330,"sX":1.6,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"8.58%","height":"2.64%","x":"66.7%","y":"30.62%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"Battery Voltage: [#]"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/VBAT","event":"feed","important":"false"}}}}},"Label#9":{"t":"Label","lX":1260,"lY":360,"sX":1.2,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"6.43%","height":"2.64%","x":"66.7%","y":"30.62%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"CSQ: [#]"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/CSQ","event":"feed","important":"false"}}}}},"Label#10":{"t":"Label","lX":1260,"lY":395,"sX":1.2,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"6.43%","height":"2.64%","x":"66.7%","y":"30.62%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"Time: [#]"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/TIME","event":"feed","important":"false"}}}}},"Label#11":{"t":"Label","lX":1260,"lY":425,"sX":2.65,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"14.21%","height":"2.75%","x":"67.51%","y":"44.88%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<div>Number Satellites: [#]</div>"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/SAT","event":"feed","important":"false"}}}}},"Label#12":{"t":"Label","lX":1265,"lY":465,"sX":2.65,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"14.21%","height":"2.75%","x":"67.51%","y":"44.88%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<div>Fix Type: [#]</div>"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/DISPLAY/FIX","event":"feed","important":"false"}}}}},"Text Area#1":{"t":"Text Area","lX":1420,"lY":110,"sX":4.15,"sY":5.05,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"22.25%","height":"48.05%","x":"38.5%","y":"12.2%"},"ver":"190104c190915","dis":false,"tt":"","a":{"placeholder":"","label text":"Database Testing"},"ev":{"clientEvents":{"inputEvents":{"Database  Test Logs":{"channel":"lookup-dropdown-receive-list/receive value","event":"receive value","important":"false"}}},"serverEvents":{"inputEvents":{}}}},"Register":{"t":"Scripting","lX":1150,"lY":285,"sX":1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOSCALE","width":"5.36%","height":"10.6%","x":"63.06%","y":"89.08%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=lookups-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\nvar oldVal;\n\n// Get list of tables in lookups DB\nfunction get_lookup_keys() {\n\tDatabase.readRecords(\"yachts\",\"yachts\",\n\t\tfunction (dbResponse) {\n\t\t\tif (dbResponse.value === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar keys = Object.keys(dbResponse.value.data);\n\t\t\t//ClientEvents.publish(\"lookup-dropdown-receive-list\", keys, false);\n\t\t\trefresh_tables();\n\t\t}\n\t);\n}\n\nfunction get_detailed_values(){\n\tDatabase.readRecords(\"yachts\", \"yachts\", function(dbResponse) {\n\t\tconsole.log(dbResponse);\n\t\tClientEvents.publish(\"detailed-table-clear\",\"\",false);\n\t\tvar collection = new SensaCollection([\"tracker_id\", \"user_id\", \"first_name\", \"last_name\", \"division_id\", \"division\", \"sail_number\", \"boat_name\", \"email\", \"phone_no\", \"boat_id\", \"device_type\", \"manual_latitude\", \"manual_longitude\", \"start_time\", \"finish_time\", \"last_seen\"], \"tracker_id\");\n\t\tObject.keys(dbResponse.value.data).forEach( function (key) {\n\t\t\tvar tracker_id = dbResponse.value.data[key][0];\n\t\t\tconsole.log(tracker_id);\n\t\t\tvar user_id = dbResponse.value.data[key][1];\n\t\t\tvar first_name = dbResponse.value.data[key][2];\n\t\t\tvar last_name = dbResponse.value.data[key][3];\n\t\t\tvar division_id = dbResponse.value.data[key][4];\n\t\t\tvar division = dbResponse.value.data[key][5];\n\t\t\tvar sail_number = dbResponse.value.data[key][6];\n\t\t\tvar boat_name = dbResponse.value.data[key][7];\n\t\t\tvar email = dbResponse.value.data[key][8];\n\t\t\tvar phone_no = dbResponse.value.data[key][9];\n\t\t\tvar boat_id = dbResponse.value.data[key][10];\n\t\t\tvar device_type = dbResponse.value.data[key][11];\n\t\t\tvar manual_latitude = dbResponse.value.data[key][12];\n\t\t\tvar manual_longitude = dbResponse.value.data[key][13];\n\t\t\tvar start_time = dbResponse.value.data[key][14];\n\t\t\tvar finish_time = dbResponse.value.data[key][15];\n\t\t\tvar last_seen = dbResponse.value.data[key][16];\n\t\t\tconsole.log(device_type);\n\t\t\tcollection.addRow(tracker_id, [tracker_id, user_id, first_name, last_name, division_id, division, sail_number, boat_name, email, phone_no, boat_id, device_type, manual_latitude, manual_longitude, start_time, finish_time, last_seen]);\n\t\t});\n\t\t\n\t\tClientEvents.publish(\"detailed-table-receive\", collection, false);\n\t});\n}\n\nfunction refresh_tables() {\n\tDatabase.readRecords(\"yachts\", \"yachts\", function(dbResponse) {\n\t\tClientEvents.publish(\"registered_devices_table_clear\", \"\", false);\n\t\tvar collection = new SensaCollection([\"tracker_id\", \"device_type\", \"first_name\"], \"tracker_id\");\n\t\tObject.keys(dbResponse.value.data).forEach( function (key) {\n\t\t\tvar tracker_id = dbResponse.value.data[key][0];\n\t\t\tvar first_name = dbResponse.value.data[key][2];\n\t\t\tvar device_type = dbResponse.value.data[key][11];\n\t\t\tconsole.log(device_type);\n\t\t\tconsole.log(tracker_id);\n\t\t\tcollection.addRow(tracker_id, [tracker_id, device_type, first_name]);\n\t\t});\n\t\tClientEvents.publish(\"registered_devices_table_receive\", collection, false);\n\t\tClientEvents.publish(\"lookupdropdown-receive-list\", collection, false);\n\t});\n\tget_detailed_values();\n}\n\t\t\n\n\nfunction get_dropdown_value () {\n    var formData = Script.getForm(\"lookup-form\");\n    var option = formData[\"lookup-dropdown\"];\n    if (typeof option !== \"string\" && !(option instanceof String)) {\n        option = \"\";\n    }\n    return option;\n}\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on('load', function() {\n\tvar dbval = \n\t\t{1:{\n\t\t\ttracker_id: \"1\",\n\t\t\t user_id: \"1\",\n\t\t\t first_name: \"Seb\",\n\t\t\t last_name: \"Young\",\n\t\t\t division_id: \"001\",\n\t\t\t division: \"div1\",\n\t\t\t sail_number: \"617KWQ\",\n\t\t\t boat_name: \"Jammy Dodger\",\n\t\t\t email: \"franklyfrank00@gmail.com\",\n\t\t\t phone_no: \"0416184982\",\n\t\t\t boat_id: \"001\",\n\t\t\tdevice_type: \"Yacht\",\n\t\t\tmanual_latitude: null,\n\t\t\tmanual_longitude: null\n\t\t}};\n\t\t \n\tDatabase.saveRecord(\"yachts\",\"yachts\", dbval, function(dbResponse){\n\t\tconsole.log(dbResponse);\n\t}, null);\n\tconsole.log(dbval);\n    \n    // Load lookups database;\n    get_lookup_keys();\n\t//create_dummy_data();\n\t\n\tClientEvents.subscribe(\"lookup-dropdown-selected\", function (eventData, channel) {\n\t\trefresh_tables();\n\t});\n\t\n    //Get value is lookup-dropdown and set title of Table\n    var option = get_dropdown_value();\n    if (option) {\n        ClientEvents.publish(\"lookup-table-set-title\", option);\n\t\tDatabase.readRecords(\"lookup\", option.toLowerCase(), \"*\", \"\", \"ORDER by key COLLATE NOCASE ASC\");\n    }\n\t\n\tClientEvents.subscribe(\"lookup-table-selected\", function(eventData, channel) {\n\t\tObject.keys(eventData.value.data).forEach(function (item, index, array) {\n\t\t\tif (array.length !== 1) {\n\t\t\t\tthrow new Error(\"Array should be of length 1 when table is selected \" + String.fromCodePoint(0x1F641));\n\t\t\t}\n\t\t\t\n\t\t\toldVal = eventData.value.data[item][0];\n\t\t\tClientEvents.publish(\"lookup-value-receive\",  eventData.value.data[item][0]);\n\t\t});\n\t});\n\t\n\tClientEvents.subscribe(\"lookup-clear-pressed\", function(eventData, channel) {\n\t\tClientEvents.publish(\"lookup-value-receive\", \"\");\n\t});\n\t\n\t// when the tick in the manual marker registration box is pressed, this function is run. It takes the tracker ID, latitude and longitude, and saves it in the database.\n\t// It then refreshes the tables.\n\tClientEvents.subscribe(\"manual-marker-save\", function(eventData, channel) {\n\t\tvar formData = Script.getForm(\"manual_marker_reg\");\n\t\tvar tracker_id_var = formData[\"manual-tracker-id\"];\n\t\tvar latitude = formData[\"manual-latitude\"];\n\t\tvar longitude = formData[\"manual-longitude\"];\n\t\tvar packet = {};\n\t\tpacket[tracker_id_var] = \n\t\t\t\t\t  {tracker_id: tracker_id_var,\n\t\t\t\t\t   user_id: 0,\n\t\t\t\t\t   first_name: \"-\",\n\t\t\t\t\t   division_id: \"-\",\n\t\t\t\t\t   division: \"-\",\n\t\t\t\t\t   last_name: \"-\",\n\t\t\t\t\t   sail_number: \"-\",\n\t\t\t\t\t   email: \"-\",\n\t\t\t\t\t   boat_name: \"-\",\n\t\t\t\t\t   phone_no: \"-\",\n\t\t\t\t\t   boat_id: 0,\n\t\t\t\t\t   device_type: \"Marker\",\n\t\t\t\t\t   manual_latitude: latitude,\n\t\t\t\t\t   manual_longitude: longitude\n\t\t\t\t\t  };\n\t\t\n\t\tDatabase.saveRecord(\"yachts\",\"yachts\", packet, function(dbResponse){\n\t\t\tconsole.log(dbResponse);\n\t\t}, null);\n\t\trefresh_tables();\n\t});\n\t\n\t// event to set the start time\n\tClientEvents.subscribe(\"set-start-time\", function(eventData, channel){\n\t\t// get the form data from the time input widget\n\t\tvar formData = Script.getForm(\"start-time\");\n\t\tconsole.log(formData);\n\t\tvar start_time = formData[\"start-time\"];\n\t\t\n\t\t\n\t\t\n\t\t// format it (convert to UTC) and send it to the database, need to update every field - maybe remove the not null from the database, this way don't have to read in\n\t\t// all of the required values, just to send it back to the database\n\t\t\n\t\t\n\t\t\n\t});\n\t\n\t// subscribe to the save marker event. Essentially just sets the tracker ID, and sets everything else to null\n\tClientEvents.subscribe(\"marker-save\", function(eventData, channel) {\n\t\tvar formData = Script.getForm(\"reg_marker\");\n\t\tvar tracker_id_var = formData[\"tracker-id-marker\"];\n\t\tvar packet = {};\n\t\tpacket[tracker_id_var] = \n\t\t\t\t\t  {tracker_id: tracker_id_var,\n\t\t\t\t\t   user_id: 0,\n\t\t\t\t\t   first_name: \"-\",\n\t\t\t\t\t   division_id: \"-\",\n\t\t\t\t\t   division: \"-\",\n\t\t\t\t\t   last_name: \"-\",\n\t\t\t\t\t   sail_number: \"-\",\n\t\t\t\t\t   email: \"-\",\n\t\t\t\t\t   boat_name: \"-\",\n\t\t\t\t\t   phone_no: \"-\",\n\t\t\t\t\t   boat_id: 0,\n\t\t\t\t\t   device_type: \"Marker\",\n\t\t\t\t\t   manual_latitude: null,\n\t\t\t\t\t   manual_longitude: null\n\t\t\t\t\t  };\n\t\t\n\t\tDatabase.saveRecord(\"yachts\",\"yachts\", packet, function(dbResponse){\n\t\t\tconsole.log(dbResponse);\n\t\t}, null);\n\t\trefresh_tables();\n\t\t\n\t});\n\t\n\tClientEvents.subscribe(\"yacht-save\", function(eventData, channel) {\n\t\tvar formData = Script.getForm(\"reg_device\");\n\t\tvar user_id_var = formData[\"user-id\"];\n\t\tvar division_id_var = formData[\"division-id\"];\n\t\tvar first_name_var = formData[\"first-name\"];\n\t\tvar division_var = formData[\"division\"];\n\t\tvar last_name_var = formData[\"last-name\"];\n\t\tvar sail_number_var = formData[\"sail-number\"];\n\t\tvar email_var = formData[\"email\"];\n\t\tvar boat_name_var = formData[\"boat-name\"];\n\t\tvar phone_number_var = formData[\"phone-number\"];\n\t\tvar boat_id_var = formData[\"boat-id\"];\n\t\tvar tracker_id_var = formData[\"tracker-id\"];\n\t\tconsole.log(user_id_var);\n\t\tconsole.log(division_id_var);\n\t\tconsole.log(first_name_var);\n\t\tconsole.log(division_var);\n\t\tconsole.log(last_name_var);\n\t\tconsole.log(sail_number_var);\n\t\tconsole.log(email_var);\n\t\tconsole.log(boat_name_var);\n\t\tconsole.log(phone_number_var);\n\t\tconsole.log(boat_id_var);\n\t\tconsole.log(tracker_id_var);\n\t\t\n\t\t// need to add some logic to check if all of the required fields are filled in\n\t\t//var option = get_dropdown_value().toLowerCase();\n\t\t//if (option === \"\") {\n\t\t//\tconsole.error(\"Unable to get dropdown option \" + String.fromCodePoint(0x1F641));\n\t\t//\treturn false;\n\t\t//}\n\t\t\n\t\tvar packet = {};\n\t\tpacket[tracker_id_var] = \n\t\t\t\t\t  {tracker_id: tracker_id_var,\n\t\t\t\t\t   user_id: user_id_var,\n\t\t\t\t\t   first_name: first_name_var,\n\t\t\t\t\t   division_id: division_id_var,\n\t\t\t\t\t   division: division_var,\n\t\t\t\t\t   last_name: last_name_var,\n\t\t\t\t\t   sail_number: sail_number_var,\n\t\t\t\t\t   email: email_var,\n\t\t\t\t\t   boat_name: boat_name_var,\n\t\t\t\t\t   phone_no: phone_number_var,\n\t\t\t\t\t   boat_id: boat_id_var,\n\t\t\t\t\t   device_type: \"Yacht\",\n\t\t\t\t\t   manual_latitude: null,\n\t\t\t\t\t   manual_longitude: null\n\t\t\t\t\t  };\n\t\t\n\t\tconsole.log(packet);\n\t\t\t\n\t\t\n\t\tDatabase.saveRecord(\"yachts\",\"yachts\", packet, function(dbResponse){\n\t\t\tconsole.log(dbResponse);\n\t\t}, null);\n\t\trefresh_tables();\n\t});\n\t\n\tClientEvents.subscribe(\"delete-device\", function(eventData, channel) {\n \t\t\n\t\tvar formData = Script.getForm(\"registered-devices-table\");\n\t\tif (formData[\"registered-devices-table\"] === undefined) {\n\t\t\tconsole.error(String.fromCodePoint(0x1F641));\n\t\t\treturn false;\n\t\t}\n\t\tvar data;\n\t\tvar obj = formData[\"registered-devices-table\"];\n\t\tif (obj.data !== undefined && Object.prototype.toString.call(obj.data) === \"[object Object]\") {\n\t\t\tdata = obj.data;\n\t\t}\n\t\t \n\t\tvar val = first(data);\n\t\tconsole.log(val);\n\t\tvar option = val[0];\n\t\tconsole.log(option);\n\t\t// Kris to check because this is his script now.\n\t\tif (val === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tDatabase.deleteRecord(\"yachts\", \"yachts\", \"tracker_id\", option, function(data){\n\t\t\t\n\t\t\tif(data.value === 1)\n\t\t\t{\n\t\t\t\tClient.clearDirtyFlag();\n\t\t\t\trefresh_tables(option);\n\t\t\t}\n\t\t});\n\n\t\t//Object.keys(data).forEach(function (value, index, array) {\n\t\t//\tClientEvents.publish(\"registered_devices_table_receive\", \"\");\n\t\t//});\n\t});\n\n});\nfunction first(p) {\n  for (var i in p) return p[i];\n}\n/**\n * Response to message from server channel\n */\nScript.on('server', function(eventData) {\n});"},"ev":{"serverEvents":{"inputEvents":{"db-response":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"}}}}},"Dropdown#2":{"t":"Dropdown","lX":1285,"lY":645,"sX":1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.36%","height":"5.3%","x":"68.9%","y":"68.4%"},"ver":"190104c190915","dis":false,"tt":"","a":{},"ev":{"clientEvents":{"inputEvents":{"New Event #1":{"channel":"lookup-dropdown-receive-list/receive list","event":"receive list","important":"false"}}}}},"user-id":{"t":"Input","lX":65,"lY":190,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.54%","y":"20.8%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"User ID","color":"grey","form id":"reg_device","tab index":"1"},"ev":{}},"first-name":{"t":"Input","lX":65,"lY":265,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.22%","y":"16.37%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"First Name","color":"grey","form id":"reg_device","tab index":"3"},"ev":{}},"division":{"t":"Input","lX":200,"lY":265,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"10.99%","y":"28.1%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Division","color":"grey","form id":"reg_device","tab index":"4"},"ev":{}},"last-name":{"t":"Input","lX":65,"lY":325,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.22%","y":"28.62%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Last Name","color":"grey","form id":"reg_device","tab index":"5"},"ev":{}},"sail-number":{"t":"Input","lX":200,"lY":325,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.22%","y":"16.37%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Sail Number","color":"grey","form id":"reg_device","tab index":"6"},"ev":{}},"email":{"t":"Input","lX":65,"lY":385,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.22%","y":"16.37%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Email","color":"grey","form id":"reg_device","tab index":"7"},"ev":{}},"boat-name":{"t":"Input","lX":205,"lY":385,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.27%","y":"54.49%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Boat Name","color":"grey","form id":"reg_device","tab index":"8"},"ev":{}},"phone-number":{"t":"Input","lX":65,"lY":445,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.06%","y":"40.97%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Phone Number","color":"grey","form id":"reg_device","tab index":"9"},"ev":{}},"boat-id":{"t":"Input","lX":205,"lY":445,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.22%","y":"16.37%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Boat ID","color":"grey","form id":"reg_device","tab index":"10"},"ev":{}},"tracker-id":{"t":"Input","lX":65,"lY":505,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.32%","y":"53.22%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Tracker ID","color":"grey","form id":"reg_device","tab index":"11"},"ev":{}},"yacht-save":{"t":"Icon","lX":260,"lY":550,"sX":1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.68%","height":"5.3%","x":"13.67%","y":"54.38%"},"ver":"200628c190915","dis":false,"tt":"","a":{"icon file":"check-square","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"press-save":{"channel":"yacht-save/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"division-id":{"t":"Input","lX":200,"lY":195,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"10.88%","y":"20.47%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Division ID","color":"grey","form id":"reg_device","tab index":"2"},"ev":{}},"registered-devices-table":{"t":"Table","lX":385,"lY":185,"sX":2.85,"sY":3.05,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"15.28%","height":"53.42%","x":"20.64%","y":"27.45%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"tracker_id,device_type,first_name","title":"","selectable":"single","form id":"registered-devices-table","colWidths":"0.3333333333333333,0.3333333333333333,0.3333333333333333"},"ev":{"clientEvents":{"inputEvents":{"Clear":{"channel":"registered_devices_table_clear/delete all rows","event":"delete all rows","important":"false"},"Receive":{"channel":"registered_devices_table_receive/receive value","event":"receive value","important":"false"}}}}},"tracker-id-marker":{"t":"Input","lX":60,"lY":685,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.22%","y":"73.07%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Tracker ID","color":"grey","form id":"reg_marker","tab index":"12"},"ev":{}},"Yacht Display and Calculations":{"t":"Scripting","lX":1390,"lY":85,"sX":1,"sY":1,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"NOSCALE","width":"5.36%","height":"10.6%","x":"74.53%","y":"8.8%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n\nvar mapPins = {};\nvar popupTemplate;\n\nvar marker_coords = [];\nvar total_marker_counter = 0;\n\nfunction pDistance(x, y, x1, y1, x2, y2) {\n  var A = x - x1;\n  var B = y - y1;\n  var C = x2 - x1;\n  var D = y2 - y1;\n\n  var dot = A * C + B * D;\n  var len_sq = C * C + D * D;\n  var param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  var xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\t// can now convert to the distance using the ellipse earth model\n  var M_PI = Math.PI;\n  var radius = 6372800;\n  var calibrated_lat = x;\n  var operation_lat = xx;\n  var calibrated_long = y;\n  var operation_long = yy;\n  var phi1 = calibrated_lat * M_PI / 180.0;\n  var phi2 = operation_lat * M_PI / 180.0;\n  var dphi = (operation_lat - calibrated_lat) * M_PI / 180.0;\n  var dlambda = (operation_long - calibrated_long) * M_PI / 180.0;\n  var a = Math.pow(Math.sin(dphi / 2),2) + Math.cos(phi1)*Math.cos(phi2)*Math.pow(Math.sin(dlambda/2),2);\n  var distance = 2 * radius * Math.atan2(Math.sqrt(a),Math.sqrt(1-a));\n  return distance;\n  //var dx = x - xx;\n  //var dy = y - yy;\n  //return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction lineSlope(lat1, lon1, lat2, lon2){\n\tif(lat1 - lat2 == 0.0){\n\t\treturn NaN;\n\t} else {\n\t\treturn (lon1-lon2)/(lat1-lat2);\n\t}\n}\n\n// function determines if the two lines intersect\n// latitude is defined as x, and longitude is defined as y\nfunction intersectionPoint(Alat1, Alon1, Alat2, Alon2, Blat1, Blon1, Blat2, Blon2){\n\tvar out_lat, out_lon;\n\t\n\tvar slopeA = lineSlope(Alat1, Alon1, Alat2, Alon2);\n\tvar slopeB = lineSlope(Blat1, Blon1, Blat2, Blon2);\n\tif (slopeA == slopeB){\n\t\tout_lat = NaN;\n\t\tout_lon = NaN;\n\t} else if (isNaN(slopeA) && !isNaN(slopeB)){\n\t\tout_lat = Alat1;\n\t\tout_lon = (Alat1-Blat1)*slopeB + Blon1;\t\t\n\t} else if (isNaN(slopeB) && !isNaN(slopeA)){\n\t\tout_lat = Blat1;\n\t\tout_lon = (Blat1-Alat1)*slopeA + Alon1;\n\t} else {\n\t\tout_lat = (slopeA*Alat1 - slopeB*Blat1 + Blon1 - Alon1) / (slopeA - slopeB);\n\t\tout_lon = slopeB*(out_lat-Blat1) + Blon1;\n\t}\n\t// check that it falls in between both lines, otherwise the function will return a value that lies anywhere on the line, not necessarily the line segment.\n\t// get the min/max coords, also need to add some tolerance\n\tvar tolerance = 0.00000001; // .1cm of tolerance\n\tvar bigger_Alat, smaller_Alat, bigger_Alon, smaller_Alon, bigger_Blat, smaller_Blat, bigger_Blon, smaller_Blon;\n\tbigger_Alat = Math.max(Alat1, Alat2) + tolerance;\n\tsmaller_Alat = Math.min(Alat1, Alat2) - tolerance;\n\t\n\tbigger_Alon = Math.max(Alon1, Alon2) + tolerance;\n\tsmaller_Alon = Math.min(Alon1, Alon2) - tolerance;\n\t\n\tbigger_Blat = Math.max(Blat1, Blat2) + tolerance;\n\tsmaller_Blat = Math.min(Blat1, Blat2) - tolerance;\n\t\n\tbigger_Blon = Math.max(Blon1, Blon2) + tolerance;\n\tsmaller_Blon = Math.min(Blon1, Blon2) - tolerance;\n\t\n\t// now check that the intersection falls between all these\n\tif (out_lat >= smaller_Alat  && out_lat <= bigger_Alat && out_lon >= smaller_Alon && out_lon <= bigger_Alon &&\n\t\tout_lat >= smaller_Blat && out_lat <= bigger_Blat && out_lon >= smaller_Blon && out_lon <= bigger_Blon){\n\t\treturn [out_lat, out_lon];\n\t}\n}\n\n\n\nScript.on('load', function() {\n\t\n\tconsole.log(\"testing intersection script\");\n\tconsole.log(intersectionPoint(-27.524807, 152.969968, -27.524733, 152.970124, -27.524825, 152.970100,-27.52470, 152.97003));\n\t//console.log(intersectionPoint(1,1,1,2,0,4,2,4));\n\t\n\tconsole.log(\"trying to map\");\n\t\n\tpopupTemplate = Script.getScriptElement(\"popupTemplateDesktop\");\n\t//var pin = {\n\t//\t\"id\": \"1\",\n\t//\t\"loc\": {\"lat\" : \"-27.506707\", \"lng\" : \"153.092701\"}\n\t//}\n\t// set up the finish markers\n\tvar options = {};\n\t\toptions[\"columns\"] = \"*\";\n\t\toptions[\"filter\"] = \"device_type = \\\"Marker\\\"\";\n\t\toptions[\"order\"] = \"\";\n\tDatabase.readRecords(\"yachts\", \"yachts\", function(dbResponse) {\n\t\tconsole.log(\"has read marker records\");\n\t\tObject.keys(dbResponse.value.data).forEach( function (key) {\n\t\t\tvar tracker_id = dbResponse.value.data[key][0];\n\t\t\tvar name = dbResponse.value.data[key][2];\n\t\t\tvar device_type = dbResponse.value.data[key][11];\n\t\t\tvar manual_latitude = dbResponse.value.data[key][12];\n\t\t\tvar manual_longitude = dbResponse.value.data[key][13];\n\t\t\tconsole.log(\"has read in the detailed response\");\n\t\t\t\n\t\t\t// add the coordinates for the marker to the array to draw a line\n\t\t\tvar new_coords = {\"lat\": manual_latitude, \"lon\": manual_longitude};\n\t\t\tmarker_coords[tracker_id] = new_coords;\n\t\t\t\n\t\t\t\n\t\t\tif (device_type === \"Marker\"){\n\t\t\t\tconsole.log(\"_______________AAAAAAAAAAAAAAAAAA__________________\");\n\t\t\t\tconsole.log(total_marker_counter++);\n\t\t\t\tif (manual_latitude !== null && manual_longitude !== null){\n\t\t\t\t\tvar pinID = parseInt(tracker_id);\n\t\t\t\t\tvar popup = popupTemplate.cloneNode(true);\n\t\t\t\t\tvar pinPacket = {\n\t\t\t\t\t\tid: String(pinID),\n\t\t\t\t\t\tloc: {\n\t\t\t\t\t\t\tlat: parseFloat(manual_latitude),\n\t\t\t\t\t\t\tlng: parseFloat(manual_longitude)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontent: popup\n\t\t\t\t\t};\n\n\t\t\t\t\tmapPins[pinID] = pinPacket;\n\n\t\t\t\t\tpinPacket.content.querySelector(\"[data-value='icon']\").classList.add(\"finishMarker\");\n\n\t\t\t\t\tvar iconElem = pinPacket.content.querySelector(\"[data-value='icon']\");\n\t\t\t\t\ticonElem.classList = [];\n\t\t\t\t\ticonElem.classList.add(\"finishMarker\");\n\t\t\t\t\t\n\t\t\t\t\tconsole.log(\"published finish markers\");\n\t\t\t\t\tClientEvents.publish(\"map pins\", pinPacket);\n\t\t\t\t\tpinPacket.content.querySelector(\"[data-value='title']\").innerHTML = pinID;\n\t\t\t\t\tpinPacket.content.querySelector(\"[data-value='id']\").innerHTML = pinID;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\n\t\t});\n\t\tconsole.log(\"Length: \" + marker_coords.length);\n\t\tconsole.log(\"Array: \" + marker_coords);\n\t\tif (total_marker_counter == 2){\n\t\t\t// make the draw line packet, and then publish it to the map client event\n\t\t\tvar coords_string = JSON.stringify(marker_coords);\n\t\t\t//console.log(coords_string);\n\t\t\tvar marker1_lat, marker1_lon, marker2_lat, marker2_lon;\n\t\t\tvar marker_counter = 0;\n\t\t\tmarker_coords.forEach(function(item){\n\t\t\t\tif (typeof item === \"object\"){\n\t\t\t\t\tif (marker_counter == 0){\n\t\t\t\t\t\tmarker1_lat = parseFloat(item.lat);\n\t\t\t\t\t\tmarker1_lon = parseFloat(item.lon);\n\t\t\t\t\t\tmarker_counter++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmarker2_lat = parseFloat(item.lat);\n\t\t\t\t\t\tmarker2_lon = parseFloat(item.lon);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar marker_1 = {\"lat\": marker1_lat, \"lng\": marker1_lon};\n\t\t\tvar marker_2 = {\"lat\": marker2_lat, \"lng\": marker2_lon};\n\t\t\tvar test_obj = {\n\t\t\t\t\"coords\": [{\"lat\": -27, \"lng\": 153},{\"lat\": -28, \"lng\": 153}],\n\t\t\t\t\"color\": \"#FF0000\",\n\t\t\t\t\"opacity\": 1.0,\n\t\t\t\t\"weight\": 2\n\t\t\t};\n\t\t\t//console.log(JSON.stringify(test_obj));\n\t\t\tconsole.log(marker_1);\n\t\t\tconsole.log(marker_2);\n\t\t\tvar line_packet = {\n\t\t\t\t\"coords\": [marker_1, marker_2],\n\t\t\t\t\"color\": \"#FF0000\",\n\t\t\t\t\"opacity\": 1.0,\n\t\t\t\t\"weight\": 2\n\t\t\t};\n\t\t\tconsole.log(\"________________AAAAAAAAAAAAAAAAAA______________________\");\n\t\t\tconsole.log(JSON.stringify(line_packet));\n\t\t\t//var another_test_obj = {\"coords\":[{\"lat\":-27.524667,\"lng\":152.96996567},{\"lat\":-27.534667,\"lng\":152.96896567},{\"lat\":-27.535667,\"lng\":152.96796567}], \"color\": \"#ff0000\", \"opacity\": 1, \"weight\":2};\n\t\t\t//console.log(JSON.stringify(another_test_obj));\n\t\t\tClientEvents.publish(\"draw-finish-line\", line_packet);\n\t\t\t//console.log(\"published line\");\n\t\t}\n\t}, options);\n\tconsole.log(\"finished mapping\");\n});\n\n\t\n\n\t\n\t\n\t\t\n\t\n\t\n\t// setup the finish line\n\t/*\n\tvar pinID = \"finish\";\n\tvar lat = -27.537078;\n\tvar lon = 152.971966;\n\tpopupTemplate = Script.getScriptElement(\"popupTemplateDesktop\");\n\tvar popup = popupTemplate.cloneNode(true);\n\tvar pinPacket = {\n\t\tid: pinID,\n\t\tloc: {\n\t\t\tlat: parseFloat(lat),\n\t\t\tlng: parseFloat(lon)\n\t\t},\n\t\tcontent: popup\n\t};\n\t\n\tmapPins[pinID] = pinPacket;\n\t\n\tpinPacket.content.querySelector(\"[data-value='icon']\").classList.add(\"finishMarker\");\n\t\n\tvar iconElem = pinPacket.content.querySelector(\"[data-value='icon']\");\n\ticonElem.classList = [];\n\ticonElem.classList.add(\"finishMarker\");\n\t\n\tClientEvents.publish(\"map pins\", pinPacket);\n\tpinPacket.content.querySelector(\"[data-value='title']\").innerHTML = pinID;\n\tpinPacket.content.querySelector(\"[data-value='id']\").innerHTML = pinID;\n\t\n\t*/\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t// Send popup to map\n\t//if (deviceState && +deviceState !== 0) {\n\t\t\n\t//}\n\t\n\t// Design packet\n\t\n\t\n\t// Set pin state.\n\t//if (deviceState && deviceState == 1) {\n\t\t\n\t/*} else {\n\t\tpinPacket.content.querySelector(\"[data-value='icon']\").classList.add(\"redIcon\");\n\t}*/\n\n\nScript.on(\"server\", function(eventData, channel) {\n\tvar fqn = eventData.sysmeta.channel.split(\"/\");\n\tvar instance = fqn[2].toLowerCase();\n\tvar scope = fqn[3].toLowerCase();\n\tif (typeof eventData.value === \"undefined\" || typeof eventData.value != \"string\"){\n\t\treturn;\n\t}\n\tvar value;\n\tvar isJSON = false;\n\ttry {\n        value = JSON.parse(eventData.value);\n\t\tisJSON = true;\n\t\tconsole.log(\"IS JSON\");\n    } catch (e) {\n        isJSON = false;\n\t\tconsole.log(\"NOT JSON\");\n    }\n\t\n\tif (!isJSON){\n\t\treturn;\n\t}\n\t\n\t/*\n\t// update the marker coordinates\n\tDatabase.readRecords(\"yachts\",\"yachts\", function(dbResponse) {\n\t\t\tvar marker_counter = 0;\n\t\t\tObject.keys(dbResponse.value.data).forEach( function (key) {\n\t\t\t\tvar tracker_id = dbResponse.value.data[key][0];\n\t\t\t\tvar manual_latitude = dbResponse.value.data[key][12];\n\t\t\t\tvar manual_longitude = dbResponse.value.data[key][13];\n\t\t\t\tif (marker_counter == 0){\n\t\t\t\t\tmarker1_lat = manual_latitude;\n\t\t\t\t\tmarker1_lon = manual_longitude;\n\t\t\t\t\tmarker_counter++;\n\t\t\t\t} else {\n\t\t\t\t\tmarker2_lat = manual_latitude;\n\t\t\t\t\tmarker2_lon = manual_longitude;\n\t\t\t\t}\n\t\t\t});\n\t\t}, {\"columns\": \"*\", \"filter\": \"device_type = \\\"Marker\\\"\", \"order\": \"\"});\n\t\tconsole.log(\"finished updating marker coordinates\");\n\t*/\n\t\n\tif (scope === \"display\" && instance === \"device\") {\n\t\t// get the pin ID\n\t\tconsole.log(eventData);\n\t\tif (typeof value.id === \"undefined\"){\n\t\t\treturn;\n\t\t}\n\t\tvar id = value.id;\n\t\tconsole.log(\"ID: \" + id);\n\t\t\n\t\t// define options for database query\n\t\tvar options = {};\n\t\toptions[\"columns\"] = \"*\";\n\t\toptions[\"filter\"] = \"tracker_id = \" + String(value.id);\n\t\toptions[\"order\"] = \"\";\n\t\t\n\t\t// define variables to retrieve from the database\n\t\tvar tracker_id;\n\t\tvar name;\n\t\tvar device_type;\n\t\tvar sail_number;\n\n\t\t// read from the database\n\t\tDatabase.readRecords(\"yachts\", \"yachts\", function(dbResponse) {\n\t\t\tObject.keys(dbResponse.value.data).forEach( function (key) {\n\t\t\t\ttracker_id = dbResponse.value.data[key][0];\n\t\t\t\tname = dbResponse.value.data[key][2];\n\t\t\t\tdevice_type = dbResponse.value.data[key][11];\n\t\t\t\tsail_number = dbResponse.value.data[key][6];\n\t\t\t\tconsole.log(tracker_id);\n\t\t\t\tconsole.log(parseInt(tracker_id));\n\t\t\t\t\n\t\t\t\tif (device_type === \"Marker\"){\n\t\t\t\t\t//update the marker coords on the map\n\t\t\t\t\tvar new_coords = {\"lat\": -parseFloat(value.latitude), \"lon\": parseFloat(value.longitude)};\n\t\t\t\t\tmarker_coords[tracker_id] = new_coords;\n\t\t\t\t\t\n\t\t\t\t\tvar pinID = parseInt(tracker_id);\n\t\t\t\t\tvar popup = popupTemplate.cloneNode(true);\n\t\t\t\t\tvar pinPacket = {\n\t\t\t\t\t\tid: String(pinID),\n\t\t\t\t\t\tloc: {\n\t\t\t\t\t\t\tlat: -parseFloat(value.latitude),\n\t\t\t\t\t\t\tlng: parseFloat(value.longitude)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontent: popup\n\t\t\t\t\t};\n\n\t\t\t\t\tmapPins[pinID] = pinPacket;\n\n\t\t\t\t\tpinPacket.content.querySelector(\"[data-value='icon']\").classList.add(\"finishMarker\");\n\n\t\t\t\t\tvar iconElem = pinPacket.content.querySelector(\"[data-value='icon']\");\n\t\t\t\t\ticonElem.classList = [];\n\t\t\t\t\ticonElem.classList.add(\"finishMarker\");\n\t\t\t\t\t\n\t\t\t\t\tconsole.log(\"published finish markers\");\n\t\t\t\t\tClientEvents.publish(\"map pins\", pinPacket);\n\t\t\t\t\tpinPacket.content.querySelector(\"[data-value='title']\").innerHTML = pinID;\n\t\t\t\t\tpinPacket.content.querySelector(\"[data-value='id']\").innerHTML = pinID;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tClientEvents.publish(\"remove-line\", 1);\n\t\t\t\t\tvar coords_string = JSON.stringify(marker_coords);\n\t\t\t\t\t//console.log(coords_string);\n\t\t\t\t\tvar marker1_lat, marker1_lon, marker2_lat, marker2_lon;\n\t\t\t\t\tvar marker_counter = 0;\n\t\t\t\t\tmarker_coords.forEach(function(item){\n\t\t\t\t\t\tif (typeof item === \"object\"){\n\t\t\t\t\t\t\tif (marker_counter == 0){\n\t\t\t\t\t\t\t\tmarker1_lat = parseFloat(item.lat);\n\t\t\t\t\t\t\t\tmarker1_lon = parseFloat(item.lon);\n\t\t\t\t\t\t\t\tmarker_counter++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmarker2_lat = parseFloat(item.lat);\n\t\t\t\t\t\t\t\tmarker2_lon = parseFloat(item.lon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tvar marker_1 = {\"lat\": marker1_lat, \"lng\": marker1_lon};\n\t\t\t\t\tvar marker_2 = {\"lat\": marker2_lat, \"lng\": marker2_lon};\n\t\t\t\t\tvar test_obj = {\n\t\t\t\t\t\t\"coords\": [{\"lat\": -27, \"lng\": 153},{\"lat\": -28, \"lng\": 153}],\n\t\t\t\t\t\t\"color\": \"#FF0000\",\n\t\t\t\t\t\t\"opacity\": 1.0,\n\t\t\t\t\t\t\"weight\": 2\n\t\t\t\t\t};\n\t\t\t\t\t//console.log(JSON.stringify(test_obj));\n\t\t\t\t\tconsole.log(marker_1);\n\t\t\t\t\tconsole.log(marker_2);\n\t\t\t\t\tvar line_packet = {\n\t\t\t\t\t\t\"coords\": [marker_1, marker_2],\n\t\t\t\t\t\t\"color\": \"#FF0000\",\n\t\t\t\t\t\t\"opacity\": 1.0,\n\t\t\t\t\t\t\"weight\": 2\n\t\t\t\t\t};\n\t\t\t\t\tconsole.log(\"________________AAAAAAAAAAAAAAAAAA______________________\");\n\t\t\t\t\tconsole.log(JSON.stringify(line_packet));\n\t\t\t\t\t//var another_test_obj = {\"coords\":[{\"lat\":-27.524667,\"lng\":152.96996567},{\"lat\":-27.534667,\"lng\":152.96896567},{\"lat\":-27.535667,\"lng\":152.96796567}], \"color\": \"#ff0000\", \"opacity\": 1, \"weight\":2};\n\t\t\t\t\t//console.log(JSON.stringify(another_test_obj));\n\t\t\t\t\tClientEvents.publish(\"draw-finish-line\", line_packet);\n\t\t\t\t\t//console.log(\"published line\");\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log(\"finished reading from database\");\n\t\t\t\t// make a pinpacket, using the sail_number as the pin ID, and the incoming lat and lng\n\t\t\t\t// as the lat and lng\n\t\t\t\t// Get pin and update location\n\t\t\t\tconsole.log(mapPins);\n\n\t\t\t\tpopupTemplate = Script.getScriptElement(\"popupTemplateDesktop\");\n\t\t\t\tvar popup = popupTemplate.cloneNode(true);\n\t\t\t\tvar pinPacket = {\n\t\t\t\t\t\t\t\tid: String(tracker_id),\n\t\t\t\t\t\t\t\tloc: {\n\t\t\t\t\t\t\t\t\tlat: parseFloat(-value.latitude),\n\t\t\t\t\t\t\t\t\tlng: parseFloat(value.longitude)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcontent: popup\n\t\t\t\t};\n\t\t\t\tconsole.log(\"finished making pin packet\");\n\t\t\t\tmapPins[tracker_id] = pinPacket;\n\t\t\t\tpinPacket.content.querySelector(\"[data-value='icon']\").classList.add(\"greenBoat\");\n\t\n\t\t\t\tvar iconElem = pinPacket.content.querySelector(\"[data-value='icon']\");\n\t\t\t\ticonElem.classList = [];\n\t\t\t\ticonElem.classList.add(\"greenBoat\");\n\t\t\t\tpinPacket.content.querySelector(\"[data-value='title']\").innerHTML = sail_number;\n\t\t\t\tpinPacket.content.querySelector(\"[data-value='id']\").innerHTML = sail_number;\n\t\t\t\tconsole.log(pinPacket);\n\t\t\t\tconsole.log(\"aobut to send map pins\");\n\t\t\t\tClientEvents.publish(\"map pins\", pinPacket);\n\t\t\t\tconsole.log(\"map updated\");\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\t\n\t\t\t\t// now calculate the distance to the finish line from the yacht we just placed\n\t\t\t\tconsole.log(\"calculating distance to finish line\");\n\t\t\t\tvar distance = pDistance(parseFloat(-value.latitude), parseFloat(value.longitude),  parseFloat(marker1_lat),  parseFloat(marker1_lon),  parseFloat(marker2_lat),  parseFloat(marker2_lon));\n\t\t\t\tconsole.log(distance);\n\t\t\t\t\n\t\t\t\t// remove the row that has the sail number that we want to update the distance for\n\t\t\t\tClientEvents.publish(\"ranking-table-delete\", sail_number);\n\t\t\t\t\n\t\t\t\t// send the new row to the table\n\t\t\t\tvar collection = new SensaCollection([\"yacht\", \"distance\"], \"yacht\");\n\t\t\t\tcollection.addRow(sail_number, [sail_number, distance.toFixed(2)]);\n\t\t\t\tClientEvents.publish(\"ranking-table-receive\", collection);\n\t\t\t\t\n\t\t\t\t// sort the table by the distance, in ascending order\n\t\t\t\tvar send_value = {\"col\": \"Distance\", \"asc\": false};\n\t\t\t\tClientEvents.publish(\"ranking-table-sort\", send_value);\n\t\t\t\t\n\t\t\t\tconsole.log(\"sorted table\");\n\t\t\t\t\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\t// we then want to send this info to the table\n\t\t\t\t\n\t\t\t\t\n\t\t\t});\n\t\t}, options);\n\t\t\n\t\t\n\n\t\t\t// will need to add code to draw the markers if they are dynamic markers, and the line between them\n\t}\n});"},"ev":{"serverEvents":{"inputEvents":{"Device MQTT":{"channel":"YACHT/TESTING/DEVICE/DISPLAY","event":"feed","important":"false"},"db feedback":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"}}}}},"Container#18":{"t":"Container","lX":360,"lY":640,"sX":4.9,"sY":1.31,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"OK","width":"26.27%","height":"13.89%","x":"10.03%","y":"67.66%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Finish Marker Registration","color":"grey","3D shadow":"true"},"ev":{}},"manual-tracker-id":{"t":"Input","lX":370,"lY":685,"sX":1.1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.9%","height":"5.04%","x":"3.22%","y":"73.07%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Tracker ID","color":"grey","form id":"manual_marker_reg","tab index":"13"},"ev":{}},"manual-longitude":{"t":"Input","lX":620,"lY":680,"sX":1.41,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"7.56%","height":"5.04%","x":"33.24%","y":"72%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Longitude","color":"grey","form id":"manual_marker_reg","tab index":"15"},"ev":{}},"manual-latitude":{"t":"Input","lX":480,"lY":685,"sX":1.41,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"5.89%","height":"5.04%","x":"10.88%","y":"21.01%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Latitude","color":"grey","form id":"manual_marker_reg","tab index":"14"},"ev":{}},"marker-save":{"t":"Icon","lX":770,"lY":690,"sX":1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.68%","height":"5.3%","x":"41.34%","y":"73.17%"},"ver":"200628c190915","dis":false,"tt":"","a":{"icon file":"check-square","outline color":"no outline","form id":"manual_marker_reg"},"ev":{"clientEvents":{"outputEvents":{"marker-save":{"channel":"manual-marker-save/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"ranking-table":{"t":"Table","lX":1085,"lY":275,"sX":2.3,"sY":5.3,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"OK","width":"12.28%","height":"53.86%","x":"59.79%","y":"29.04%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"yacht,distance","display header":"true","title":"Current Ranking","form id":"ranking-table","colWidths":"0.504424778761062,0.49557522123893805"},"ev":{"clientEvents":{"inputEvents":{"Delete Row":{"channel":"ranking-table-delete/delete rows","event":"delete rows","important":"false"},"Sort Table":{"channel":"ranking-table-sort/sort rows","event":"sort rows","important":"false"},"Receive Data":{"channel":"ranking-table-receive/receive value","event":"receive value","important":"false"}}}}},"Distances":{"t":"Scripting","lX":1405,"lY":700,"sX":1,"sY":1,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"NOSCALE","width":"4.81%","height":"9.51%","x":"73.45%","y":"50.81%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on('load', function() {\n\tconsole.log(\"test pdistance function\");\n\t\n\tvar dist1, dist2, dist3;\n\t//dist1 = pDistance(1,0,0,1,0,-1);\n\t//dist2 = pDistance(1,1,0,1,0,-1);\n\t//dist3 = pDistance(1,2,0,1,0,-1);\n\t//console.log(dist1);\n\t//console.log(dist2);\n\t//console.log(dist3);\n\t//dist2 = pDistance(1,1,0,1,0,-1);\n\t//console.log(dist2);\n\t//dist3 = pDistance(1,2,0,1,0,-1);\n\t//console.log(dist3);\n\t//dist1 = pDistance(-27.52473,152.97008,-27.52473,152.97002,-27.52469,152.97006);\n\t//console.log(dist1);\n\t\n});\n\nfunction pDistance(x, y, x1, y1, x2, y2) {\n\n  var A = x - x1;\n  var B = y - y1;\n  var C = x2 - x1;\n  var D = y2 - y1;\n\n  var dot = A * C + B * D;\n  var len_sq = C * C + D * D;\n  var param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  var xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\t// can now convert to the distance using the ellipse earth model\n  var M_PI = Math.PI;\n  var radius = 6372800;\n  var calibrated_lat = x;\n  var operation_lat = xx;\n  var calibrated_long = y;\n  var operation_long = yy;\n  var phi1 = calibrated_lat * M_PI / 180.0;\n  var phi2 = operation_lat * M_PI / 180.0;\n  var dphi = (operation_lat - calibrated_lat) * M_PI / 180.0;\n  var dlambda = (operation_long - calibrated_long) * M_PI / 180.0;\n  var a = Math.pow(Math.sin(dphi / 2),2) + Math.cos(phi1)*Math.cos(phi2)*Math.pow(Math.sin(dlambda/2),2);\n  var distance = 2 * radius * Math.atan2(Math.sqrt(a),Math.sqrt(1-a));\n  return distance;\n  //var dx = x - xx;\n  //var dy = y - yy;\n  //return Math.sqrt(dx * dx + dy * dy);\n}"},"ev":{"serverEvents":{"inputEvents":{}}}},"Text Area#2":{"t":"Text Area","lX":95,"lY":815,"sX":6.75,"sY":1,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"OK","width":"32.47%","height":"9.51%","x":"4.52%","y":"77.74%"},"ver":"190104c190915","dis":false,"tt":"","a":{},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/device1/FINISH TIME","event":"feed","important":"false"}}}}},"Text Area#3":{"t":"Text Area","lX":820,"lY":865,"sX":6.85,"sY":1,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"OK","width":"32.95%","height":"9.89%","x":"39.39%","y":"82.21%"},"ver":"190104c190915","dis":false,"tt":"","a":{},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"YACHT/TESTING/device1/DISTANCE","event":"feed","important":"false"}}}}},"ServerDistance":{"t":"Scripting","lX":1400,"lY":350,"sX":1,"sY":1,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"NOSCALE","width":"4.81%","height":"9.51%","x":"69.55%","y":"33.21%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n\nScript.on(\"server\", function(eventData, channel) {\n\t// get the id from the channel\n\tvar fqn = eventData.sysmeta.channel.split(\"/\");\n\tvar instance = fqn[2].toLowerCase();\n\tvar scope = fqn[3].toLowerCase();\n\tif (scope === \"distance\") {\n\t\tconsole.log(\"Server Distance Input\");\n\t\tconsole.log(JSON.stringify(eventData));\n\t\t//console.log(JSON.parse(eventData.value));\n\t\t// parse the value from the packet\n\t\tvar value = JSON.parse(eventData.value);\n\t\t// get the distance from the packet\n\t\tvar distance = value.distance;\n\t\t\n\t\tif (typeof value.distance === \"undefined\" || value.distance == null){\n\t\t\tconsole.log(\"undefined distance\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t\n\n\t\t\n\n\t\t// the instance will be device0 or device1 or similar.\t\n\t\t// extract the number from the instance string\n\t\tvar id = instance.substr(6,1);\n\t\tconsole.log(\"ID\");\n\t\tconsole.log(id);\n\n\n\n\t\tvar options = {};\n\t\toptions[\"columns\"] = \"*\";\n\t\toptions[\"filter\"] = \"tracker_id = \" + String(id);\n\t\toptions[\"order\"] = \"\";\n\n\t\t// define variables to retrieve from the database\n\t\tvar tracker_id;\n\t\tvar name;\n\t\tvar device_type;\n\t\tvar sail_number;\n\n\t\t// read from the database\n\t\tDatabase.readRecords(\"yachts\", \"yachts\", function(dbResponse) {\n\t\t\tconsole.log(\"Still server distance\");\n\t\t\tObject.keys(dbResponse.value.data).forEach( function (key) {\n\t\t\t\tsail_number = dbResponse.value.data[key][6];\n\t\t\t\t// now need to send the sailnumber and the distance to the ranking table\n\t\t\t\t// remove the row that has the sail number that we want to update the distance for\n\t\t\t\tconsole.log(sail_number);\n\t\t\t\tClientEvents.publish(\"ranking-table-delete\", sail_number);\n\n\t\t\t\t// send the new row to the table\n\t\t\t\tvar collection = new SensaCollection([\"yacht\", \"distance\"], \"yacht\");\n\t\t\t\tcollection.addRow(sail_number, [sail_number, distance.toFixed(2)]);\n\t\t\t\tClientEvents.publish(\"ranking-table-receive\", collection);\n\t\t\t\tconsole.log(distance.toFixed(2));\n\n\t\t\t\t// sort the table by the distance, in ascending order\n\t\t\t\tvar send_value = {\"col\": \"Distance\", \"asc\": false};\n\t\t\t\tClientEvents.publish(\"ranking-table-sort\", send_value);\n\t\t\t\tconsole.log(send_value);\n\t\t\t});\n\t\t}, options);\n\t}\n});"},"ev":{"serverEvents":{"inputEvents":{"Server Distance Input":{"channel":"YACHT/TESTING/+/DISTANCE","event":"feed","important":"false"},"db feedback":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"}}}}},"ServerTime":{"t":"Scripting","lX":1405,"lY":485,"sX":1,"sY":1,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"NOSCALE","width":"4.81%","height":"9.51%","x":"67.48%","y":"46.72%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on(\"server\", function(eventData, channel) {\n\tconsole.log(\"Server time input\");\n\t//console.log(JSON.stringify(eventData.value));\n\t//console.log(eventData);\n\t\n\t\n\t\n\t\n\tvar value = JSON.parse(eventData.value);\n\tconsole.log(value);\n\tif (value.finish == true){\n\t\tClientEvents.publish(\"finish-table-delete\", String(value.sail_number));\n\n\t\t// send the new row to the table\n\t\tvar collection = new SensaCollection([\"yacht\", \"finish_time\"], \"yacht\");\n\t\tcollection.addRow(value.yacht, [value.yacht, String(value.time)]);\n\t\tconsole.log(collection);\n\t\tClientEvents.publish(\"finish-table-receive\", collection);\n\n\t\t// sort the table by the distance, in ascending order\n\t\tvar send_value = {\"col\": \"finish_time\", \"asc\": false};\n\t\tClientEvents.publish(\"finish-table-sort\", send_value);\n\t\tconsole.log(send_value);\n\t\t\n\t\tvar time = \"FINISHED\";\n\t\tClientEvents.publish(\"finish-time-test\", time);\n\t}\n});"},"ev":{"serverEvents":{"inputEvents":{"Server Time Input":{"channel":"YACHT/TESTING/+/FINISH TIME","event":"feed","important":"false"}}}}},"Text Area#4":{"t":"Text Area","lX":95,"lY":905,"sX":6.75,"sY":1,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"OK","width":"32.47%","height":"9.51%","x":"4.33%","y":"84.27%"},"ver":"190104c190915","dis":false,"tt":"","a":{},"ev":{"clientEvents":{"inputEvents":{"New Event #1":{"channel":"finish-time-test/append value","event":"append value","important":"false"}}},"serverEvents":{"inputEvents":{}}}},"finish-table":{"t":"Table","lX":1535,"lY":285,"sX":2.3,"sY":5.3,"s":"Yacht Tracking Main Display","ps":{"enabled":false,"scalingType":"OK","width":"11.06%","height":"50.43%","x":"73.83%","y":"27.31%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"yacht,finish_time","display header":"true","title":"Finish Times","form id":"finish-table","colWidths":"0.5,0.5"},"ev":{"clientEvents":{"inputEvents":{"Sort Table":{"channel":"finish-table-sort/sort rows","event":"sort rows","important":"false"},"Receive Data":{"channel":"finish-table-receive/receive value","event":"receive value","important":"false"},"Delete Row":{"channel":"finish-table-delete/delete rows","event":"delete rows","important":"false"}}}}},"start-time":{"t":"Input","lX":970,"lY":685,"sX":1.26,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOVERT","width":"6.01%","height":"5.04%","x":"46.71%","y":"65.27%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Start Time","color":"grey","type":"time","default value":"12","form id":"start-time","tab index":"16"},"ev":{"clientEvents":{"outputEvents":{}}}},"set-start-time":{"t":"Icon","lX":890,"lY":690,"sX":1,"sY":1,"s":"Yacht Tracking Registration and Settings","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.68%","height":"8.76%","x":"13.67%","y":"54.38%"},"ver":"200628c190915","z":"110","dis":false,"tt":"","a":{"icon file":"check-square","outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"New Event #1":{"channel":"set-start-time/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}}},"screens":{"Yacht Tracking Main Display":{"index":0,"icon":"directions_boat","meta":""},"Yacht Tracking Registration and Settings":{"index":1,"icon":"event_note","meta":""}},"meta":""}